apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: stax-java-back-server-d
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: stax-java-back-server
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: stax-java-back-server
        image: gcr.io/staxtaxi/stax-java-back-server:latest
        imagePullPolicy: "Always"
        ports:
        - containerPort: 3000
        env:
        - name: spring.kafka.bootstrap-servers
          value: kafka-taxi:9092
        - name: spring.datasource.url
          value: "jdbc:postgresql://postgres-clusterip:5432/postgres"
        - name: spring.datasource.password
          value: "postgrespass1289"
        - name: spring.jpa.properties.hibernate.dialect
          value: "org.hibernate.dialect.PostgreSQLDialect"
        - name: spring.jpa.hibernate.ddl-auto
          value: "update"
---
apiVersion: v1
kind: Service
metadata:
  name: stax-java-back-server-lb
  labels:
    app: stax-java-back-server
spec:
  selector:
    app: stax-java-back-server
  ports:
    - name: api
      protocol: TCP
      port: 3000
      targetPort: 3000
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: stax-java-back-server-cip
  labels:
    app: stax-java-back-server
    monitoring: stax-java-back-server-monitor
spec:
  selector:
    app: stax-java-back-server
  ports:
    - name: api
      protocol: TCP
      port: 3000
      targetPort: 3000
  type: ClusterIP